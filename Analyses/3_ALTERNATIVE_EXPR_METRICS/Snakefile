configfile: "config.yaml"

###### paths ###############
DATA = config["general_paths"]["data"]
SRC = config["general_paths"]["src"]
CONDA_ENVS = config["general_paths"]["conda_envs"]
REL_EXPR_DIR = config["paths"]["rel_expr_dir"]
PARALOG_SETS_DIR = config["paths"]["paralog_sets_dir"]
SCORE_MATRIX_DIR = config["paths"]["score_matrix_dir"]

######## tools ############
COMPUTE_PAIRWISE_EXPR_COR = config["tools"]["compute_pairwise_expr_cor"]
COMPUTE_PAIRWISE_EXPR_DIST = config["tools"]["compute_pairwise_expr_dist"]

##### Extra analyses for the revision
COMPUTE_SEQ_SIMILARITY_BLOSUM = config["tools"]["compute_seq_similarity_blosum"]
COMPUTE_SEQ_SIMILARITY_ORIGINAL = config["tools"]["compute_seq_similarity_original"]
COMPUTE_RELATIVE_EXPR = config["tools"]["compute_relative_expr"]
COMPUTE_PAIRWISE_EXPR_SIM_SUMMED_PARALOGS = config["tools"]["compute_pairwise_expr_sim_summed_paralogs"]
COMPUTE_TAU = config["tools"]["compute_tau"]
ASSOCIATE_TISSUE_WITH_TS = config["tools"]["associate_tissue_with_ts"]
SEQ_SIM_SCRIPT_DICT = {}
SEQ_SIM_SCRIPT_DICT["blosum45"] = COMPUTE_SEQ_SIMILARITY_BLOSUM 
SEQ_SIM_SCRIPT_DICT["blosum62"] = COMPUTE_SEQ_SIMILARITY_BLOSUM
SEQ_SIM_SCRIPT_DICT["original"] = COMPUTE_SEQ_SIMILARITY_ORIGINAL
#####

###### variables ###########
ALL_SPECIES = config["variables"]["all_species"]
BILATERIA = ALL_SPECIES
VERTEBRATA = config["variables"]["vertebrata"]
INSECTA = config["variables"]["insecta"]

CLADE_SPECIES_DICT = {}
CLADE_SPECIES_DICT["Vertebrata"] = VERTEBRATA
CLADE_SPECIES_DICT["Insecta"] = INSECTA
CLADE_SPECIES_DICT["Bilateria"] = BILATERIA
ALL_TISSUES = config["variables"]["all_tissues"]
ORTHOGROUPS_FILE = config["variables"]["orthogroups_file"]

#Count batches number and get a list of all batches
import os.path
BATCHES_FILE = PARALOG_SETS_DIR+"/orthogroups_batches/batches_number.txt"
if os.path.isfile(BATCHES_FILE):
  with open(BATCHES_FILE) as f:
    TOT_BATCHES = int(f.readline().strip())
    BATCH_NUMBER = list(range(1, TOT_BATCHES+1))
else:
  BATCH_NUMBER = 1

###### targets ##########
ALL_PAIRWISE_EXPR_COR = PARALOG_SETS_DIR+"/pairwise_expression_correlations/all_pairwise_expression_correlations.txt"
ALL_PAIRWISE_EXPR_DIST = PARALOG_SETS_DIR+"/pairwise_expression_distances/all_pairwise_expression_distances.txt"

BLOSUM_SEQUENCE_SIMILARITIES = expand("{path}/pairwise_sequence_similarities_{score_matrix}_{scoring_system}/batch_{batch_number}/batch_{batch_number}-sim_scores.tab", path=PARALOG_SETS_DIR, score_matrix="blosum45", scoring_system="maxmin", batch_number=ORIGINAL_BATCH_NUMBER) 
BLOSUM_PAIRWISE_SEQ_SIM = expand("{path}/pairwise_sequence_similarities_{score_matrix}_{scoring_system}/all_pairwise_sequence_similarities.txt", path=PARALOG_SETS_DIR, score_matrix="blosum45", scoring_system="maxmin")
ORIGINAL_NG_SEQUENCE_SIMILARITIES = expand("{path}/pairwise_sequence_similarities_{score_matrix}_{scoring_system}/batch_{batch_number}/batch_{batch_number}-sim_scores.tab", path=PARALOG_SETS_DIR, score_matrix="original", scoring_system="NoStartEndGaps", batch_number=ORIGINAL_BATCH_NUMBER)
ORIGINAL_NG_PAIRWISE_SEQ_SIM = expand("{path}/pairwise_sequence_similarities_{score_matrix}_{scoring_system}/all_pairwise_sequence_similarities.txt", path=PARALOG_SETS_DIR, score_matrix="original", scoring_system="NoStartEndGaps")
SUMMED_PARALOGS_EXPR_SIM = expand("{path}/pairwise_expression_similarities_summed_paralogs/batch_{batch_number}-expression_similarities.tab", path=PARALOG_SETS_DIR, batch_number=ORIGINAL_BATCH_NUMBER)
ALL_SUMMED_PARALOGS_EXPR_SIM = expand("{path}/pairwise_expression_similarities_summed_paralogs/all_pairwise_expression_similarities.txt", path=PARALOG_SETS_DIR)
SUMMED_PARALOGS_TAUS = expand("{path}/pairwise_expression_similarities_summed_paralogs/species_taus/{species}-taus.tab", path=PARALOG_SETS_DIR, species=VERTEBRATA+[species if species != "BmA" else "Bmo" for species in INSECTA])
SUMMED_PARALOGS_ASSOCIATED_TISSUES = expand("{path}/pairwise_expression_similarities_summed_paralogs/species_associated_tissue/{species}-associated_tissue.tab", path=PARALOG_SETS_DIR, species=VERTEBRATA+[species if species != "BmA" else "Bmo" for species in INSECTA])


####### rules ############
rule all:	
	input:

#######################################################
###### COMPUTE PAIRWISE EXPRESSION CORRELATIONS #######
#######################################################

### See at the beginning of the Snakefile for the definition of batch number
rule compute_pairwise_expr_correlations:
	input:
		orthogroups = PARALOG_SETS_DIR+"/orthogroups_batches/orthogroups_batch_{batch_number}.txt",
		rel_expr_files = expand(REL_EXPR_DIR+"/{species}-protein_coding_relative_ts.tab", species=VERTEBRATA+[species if species != "BmA" else "Bmo" for species in INSECTA])
	output:
		PARALOG_SETS_DIR+"/pairwise_expression_correlations/batch_{batch_number}-expression_correlations.tab"
	params:
		expr_table_dir = REL_EXPR_DIR,
		expr_file_suffix = "-protein_coding_relative_ts.tab",
		clade_species = ",".join(VERTEBRATA+[species if species != "BmA" else "Bmo" for species in INSECTA]),
		tissues = ",".join(ALL_TISSUES),
	shell:
		"""
		python {COMPUTE_PAIRWISE_EXPR_COR}	--orthogroups {input.orthogroups} \
							--expr_table_dir {params.expr_table_dir} \
							--expr_file_suffix="{params.expr_file_suffix}" \
							--clade_species "{params.clade_species}" \
							--tissues "{params.tissues}" \
							--output {output}
		"""

rule join_pairwise_expr_correlations:
	input:
		expand("{path}/pairwise_expression_correlations/batch_{batch_number}-expression_correlations.tab", path=PARALOG_SETS_DIR, batch_number=BATCH_NUMBER)
	output:
		PARALOG_SETS_DIR+"/pairwise_expression_correlations/all_pairwise_expression_correlations.txt"
	params:
		input_dir = PARALOG_SETS_DIR+"/pairwise_expression_correlations"
	shell:
		"""
		cat {params.input_dir}/batch_*-expression_correlations.tab > {output}	
		"""

#######################################################
###### COMPUTE PAIRWISE EXPRESSION DISTANCES ##########
#######################################################

### See at the beginning of the Snakefile for the definition of batch number
rule compute_pairwise_expr_distances:
	input:
		orthogroups = PARALOG_SETS_DIR+"/orthogroups_batches/orthogroups_batch_{batch_number}.txt",
		rel_expr_files = expand(REL_EXPR_DIR+"/{species}-protein_coding_relative_ts.tab", species=VERTEBRATA+[species if species != "BmA" else "Bmo" for species in INSECTA])
	output:
		PARALOG_SETS_DIR+"/pairwise_expression_distances/batch_{batch_number}-expression_distances.tab"
	params:
		expr_table_dir = REL_EXPR_DIR,
		expr_file_suffix = "-protein_coding_relative_ts.tab",
		clade_species = ",".join(VERTEBRATA+[species if species != "BmA" else "Bmo" for species in INSECTA]),
		tissues = ",".join(ALL_TISSUES),
	shell:
		"""
		python {COMPUTE_PAIRWISE_EXPR_DIST}	--orthogroups {input.orthogroups} \
							--expr_table_dir {params.expr_table_dir} \
							--expr_file_suffix="{params.expr_file_suffix}" \
							--clade_species "{params.clade_species}" \
							--tissues "{params.tissues}" \
							--output {output}
		"""

rule join_pairwise_expr_distances:
	input:
		expand("{path}/pairwise_expression_distances/batch_{batch_number}-expression_distances.tab", path=PARALOG_SETS_DIR, batch_number=BATCH_NUMBER)
	output:
		PARALOG_SETS_DIR+"/pairwise_expression_distances/all_pairwise_expression_distances.txt"
	params:
		input_dir = PARALOG_SETS_DIR+"/pairwise_expression_distances"
	shell:
		"""
		cat {params.input_dir}/batch_*-expression_distances.tab > {output}	
		"""

#### Added durring the revision process
#######################################################
## COMPUTE PAIRWISE SEQUENCE SIMILARITY BLOSUM BASED ##
#######################################################


#### From each batch, only process bilaterian conserved orthogroups.
#NB: for the original, the scoring_system argument is not actually used
rule compute_pairwise_seq_similarities:
	input:
		orthogroups = "/users/mirimia/fmantica/projects/bilaterian_GE/data/gene_sets/All_version2/orthogroups_batches/orthogroups_batch_{batch_number}.txt",
                bilaterian_conserved_orthogroups = ORTHOGROUPS_FILE,
		score_matrix = SCORE_MATRIX_DIR+"/{score_matrix}_score_matrix.tab"
	output:
		PARALOG_SETS_DIR+"/pairwise_sequence_similarities_{score_matrix}_{scoring_system}/batch_{batch_number}/batch_{batch_number}-sim_scores.tab"
	params:
		input_dir = "/users/mirimia/fmantica/projects/bilaterian_GE/data/gene_sets/All_version2/sequence_similarities/batch_{batch_number}",
		aln_suffix = "-all_pairwise_aln",
		output_dir = PARALOG_SETS_DIR+"/pairwise_sequence_similarities_{score_matrix}_{scoring_system}/batch_{batch_number}",
                seq_similarity_script = lambda wildcards : SEQ_SIM_SCRIPT_DICT[wildcards.score_matrix]
	shell:
		"""
		rm -fr {params.output_dir}/*; \
		for OG_ID in $(cat {input.orthogroups} | filter_1col 1 <(cat {input.bilaterian_conserved_orthogroups} | cut -f1 | sort | uniq) | cut -f1 | sort | uniq); do \
			cat {input.orthogroups} | awk -v orthogroup=$OG_ID '$1==orthogroup' > {params.output_dir}/orthogroups_input.tmp; \
			python {params.seq_similarity_script}	--orthogroups {params.output_dir}/orthogroups_input.tmp \
								--OG_ID $OG_ID \
								--alignments {params.input_dir}/${{OG_ID}}{params.aln_suffix} \
								--score_matrix {input.score_matrix} \
								--scoring_system {wildcards.scoring_system} \
								--output {params.output_dir}; \
			rm {params.output_dir}/orthogroups_input.tmp; done; \
		cat {params.output_dir}/*-all_sim_scores > {output}
		"""

rule join_pairwise_seq_similarities:
	input:
		expand("{path}/pairwise_sequence_similarities_{{score_matrix}}_{{scoring_system}}/batch_{batch_number}/batch_{batch_number}-sim_scores.tab", path=PARALOG_SETS_DIR, batch_number=BATCH_NUMBER)
	output:
		PARALOG_SETS_DIR+"/pairwise_sequence_similarities_{score_matrix}_{scoring_system}/all_pairwise_sequence_similarities-raw.txt"
	params:
		input_dir = PARALOG_SETS_DIR+"/pairwise_sequence_similarities_{score_matrix}_{scoring_system}"
	shell:
		"""
		cat {params.input_dir}/batch_*/batch_*-sim_scores.tab > {output}
		"""

rule adjust_pairwise_seq_similarities:
	input:
		pairwise_seq_sim = PARALOG_SETS_DIR+"/pairwise_sequence_similarities_{score_matrix}_{scoring_system}/all_pairwise_sequence_similarities-raw.txt",
		orthogroups = ORTHOGROUPS_FILE
	output:
		PARALOG_SETS_DIR+"/pairwise_sequence_similarities_{score_matrix}_{scoring_system}/all_pairwise_sequence_similarities.txt"
	params:
		considered_species = VERTEBRATA+INSECTA
	run:
		import pandas as pd

		#### Upload inputs
		pairwise_seq_sim_df = pd.read_table(str(input.pairwise_seq_sim), sep="\t", index_col=False, header=None, names=["OG_ID", "Species1", "Species2", "GeneID1", "GeneID2", "Seq_sim"])
		orthogroups_df = pd.read_table(str(input.orthogroups), sep="\t", index_col=False, header=None, names=["OG_ID", "Species", "GeneID"])
		#### Remove outgroups
		pairwise_seq_sim_df = pairwise_seq_sim_df.loc[(pairwise_seq_sim_df["Species1"].isin(params.considered_species)) & (pairwise_seq_sim_df["Species2"].isin(params.considered_species))]
                #### Only select bilaterian_conserved OGs
                bilaterian_conserved_orthogroups = list(set(list(orthogroups_df["OG_ID"])))
                pairwise_seq_sim_df = pairwise_seq_sim_df.loc[pairwise_seq_sim_df["OG_ID"].isin(bilaterian_conserved_orthogroups)]
		#### Save to file
		pairwise_seq_sim_df.to_csv(str(output), sep="\t", index=False, header=False, na_rep="NA")


#######################################################
########## SUMMED PARALOG EXPRESSION ANALYSES #########
#######################################################

### Here I need to reformat the input in such a way that I can run the following scripts.
rule compute_species_expr_from_summed_paralogs:
	input:
		"/users/mirimia/fmantica/projects/bilaterian_GE/data/broccoli_revision/bilateria/expression_tables/bilateria_conserved-tissue_average_expr-NOSVA-log2-TPMs-paralogs_summed-NORM.tab"
	output:
		PARALOG_SETS_DIR+"/pairwise_expression_similarities_summed_paralogs/species_expr_tables/{species}-bilateria_conserved-tissue_average_expr-NOSVA-log2-TPMs-paralogs_summed-NORM.tab"
	run:
		import pandas as pd

		#### Read input
		input_df = pd.read_table(str(input), sep="\t", index_col=0, header=0)
		#### Filter by species and change name
		final_df = input_df[[element for element in input_df.columns.values if wildcards.species in element]]
		final_df = final_df.rename(columns = lambda x: re.sub(".*._", "", x))
		#### Save to file
		final_df.to_csv(str(output), sep="\t", index=True, header=True, na_rep="NA")


rule compute_rel_expr_from_summed_paralogs:
	input:
		PARALOG_SETS_DIR+"/pairwise_expression_similarities_summed_paralogs/species_expr_tables/{species}-bilateria_conserved-tissue_average_expr-NOSVA-log2-TPMs-paralogs_summed-NORM.tab"
	output:
		PARALOG_SETS_DIR+"/pairwise_expression_similarities_summed_paralogs/species_rel_expr/{species}-relative_expression.tab"
	shell:
		"""
		python {COMPUTE_RELATIVE_EXPR} --input {input} --output {output}
		"""


rule compute_species_pairwise_expr_sim:
	input:
		orthogroups = PARALOG_SETS_DIR+"/orthogroups_batches/orthogroups_batch_{batch_number}.txt",
		rel_expr_files = expand(PARALOG_SETS_DIR+"/pairwise_expression_similarities_summed_paralogs/species_rel_expr/{species}-relative_expression.tab", species=VERTEBRATA+[species if species != "BmA" else "Bmo" for species in INSECTA])
	output:
		PARALOG_SETS_DIR+"/pairwise_expression_similarities_summed_paralogs/batch_{batch_number}-expression_similarities.tab"
	params:
		expr_table_dir = PARALOG_SETS_DIR+"/pairwise_expression_similarities_summed_paralogs/species_rel_expr",
		expr_file_suffix = "-relative_expression.tab",
		clade_species = ",".join(VERTEBRATA+[species if species != "BmA" else "Bmo" for species in INSECTA]),
		tissues = ",".join(ALL_TISSUES)
	shell:
		"""
		python {COMPUTE_PAIRWISE_EXPR_SIM_SUMMED_PARALOGS}	--orthogroups {input.orthogroups} \
									--expr_table_dir {params.expr_table_dir} \
									--expr_file_suffix="{params.expr_file_suffix}" \
									--clade_species "{params.clade_species}" \
									--tissues "{params.tissues}" \
									--output {output}
		"""


rule join_pairwise_expr_similarities_summed_paralogs:
	input:
		expand("{path}/pairwise_expression_similarities_summed_paralogs/batch_{batch_number}-expression_similarities.tab", path=PARALOG_SETS_DIR, batch_number=BATCH_NUMBER)
	output:
		PARALOG_SETS_DIR+"/pairwise_expression_similarities_summed_paralogs/all_pairwise_expression_similarities.txt"
	params:
		input_dir = PARALOG_SETS_DIR+"/pairwise_expression_similarities_summed_paralogs"
	shell:
		"""
		cat {params.input_dir}/batch_*-expression_similarities.tab > {output}	
		"""


###### COMPUTE TAU
#Compute tau using the summed paralog expression
rule compute_tau_summed_paralogs:
	input:
		PARALOG_SETS_DIR+"/pairwise_expression_similarities_summed_paralogs/species_expr_tables/{species}-bilateria_conserved-tissue_average_expr-NOSVA-log2-TPMs-paralogs_summed-NORM.tab"
	output:
		PARALOG_SETS_DIR+"/pairwise_expression_similarities_summed_paralogs/species_taus/{species}-taus.tab"
	shell:
		"""
		python {COMPUTE_TAU}	--input {input} \
					--output {output}
		"""

###### ASSOCIATE TISSUE
rule associate_tissue_summed_paralogs:
	input:
		PARALOG_SETS_DIR+"/pairwise_expression_similarities_summed_paralogs/species_rel_expr/{species}-relative_expression.tab"	
	output:
		PARALOG_SETS_DIR+"/pairwise_expression_similarities_summed_paralogs/species_associated_tissue/{species}-associated_tissue.tab"
	shell:
		"""
		python {ASSOCIATE_TISSUE_WITH_TS} --input {input} --output {output}
		"""
